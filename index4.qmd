---
title: "County Census"
format: html
editor: visual
---

## Load appropriate packages

```{r}

library(tidyverse)
library(tigris)
library(sf) 
library(tidycensus) 
library(htmltools)
library(janitor) 
library(here)
library(mapview) 
library(leafsync)
library(leaflet.extras2)
options(tigris_class = "sf")

```

# Download your individual Census API key

```{r}

myapikey <- "6915eb30a8f7e581eea519ad7e1ddfaeb7430e38"

census_api_key(myapikey, overwrite=TRUE)

```

# Choose the variables we want to focus on and use

```{r}

myvars <- c(totalpop = "B01003_001",
            medincome = "B19013_001",
            medage = "B01002_001")

```

# Pull and focus on TX counties (or state of your choosing)

```{r}

tx_counties_withgeo <- get_acs(geography = "county",
                       variables = c(myvars),
                       state = "TX",
                       output = "wide",
                       geometry = TRUE)

tx_counties_withgeo

```

# Remove MOE columns - they all end with "M"

```{r}

tx_counties_withgeo <- tx_counties_withgeo %>%
  select(-ends_with("M"))

tx_counties_withgeo

```

# Remove trailing "E" to clean up

```{r}

colnames(tx_counties_withgeo) <- sub("E$", "", colnames(tx_counties_withgeo)) # $ means end of string only

tx_counties_withgeo
```

# Choose a variable to focus on and create a map view

```{r}

mapview(tx_counties_withgeo, zcol = "medage")


```

# Customize colors

```{r}

mapview(tx_counties_withgeo, zcol = "medage", 
         col.regions = RColorBrewer::brewer.pal(9, "Greens"), 
         alpha.regions = 1)

```

# Turn off legends, hover text, popups

```{r}

mapview(tx_counties_withgeo, zcol = "medage", 
         col.regions = RColorBrewer::brewer.pal(9, "Greens"), 
         alpha.regions = 1,
         legend = FALSE, 
         label = FALSE, 
         popup = FALSE)


```

# Customize your own labels

```{r}

mylabel <- glue::glue("{tx_counties_withgeo$NAM} {tx_counties_withgeo$medage}")


mapview(tx_counties_withgeo, zcol = "medage", 
         col.regions = RColorBrewer::brewer.pal(9, "Greens"), 
         alpha.regions = 1,
         label = mylabel)



```

# Customize your pop-ups

```{r}

mypopup <- glue::glue(
"<strong>{tx_counties_withgeo$NAM}</strong><br />
  Total Population: {tx_counties_withgeo$totalpop}<br />
   Median Age: {tx_counties_withgeo$medage}") %>% 
  lapply(htmltools::HTML)

```

```{r}

head(mypopup)

```


```{r}
mapview(tx_counties_withgeo, zcol = "medage", 
         col.regions = RColorBrewer::brewer.pal(9, "Greens"), 
         alpha.regions = 1,
         popup = mypopup)
```

